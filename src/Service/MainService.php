<?php

namespace App\Service;

use App\Exceptions\AppException;
use App\Support\Connection;
use Carbon\Carbon;
use \PDO;
use \DatePeriod;
use \DateTime;
use \DateInterval;
use App\Support\Auth;

class MainService
{
    private Connection $rateDB;

    public function __construct(
        private ExcelService $excelService,
        private EmailService $emailService
    ) {
        $this->rateDB = new Connection(config('connection.rate'));
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–∞—Ä—É–µ–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π 
     */
    public function getFastInfo(): array
    {

        $dbh = $this->rateDB->connection;
        
        // $client_id = 144;
        $client_id = @Auth::user()['task1'];
        if ( @$client_id ) $client_id = str_replace('#', '', $client_id);

        $items = [];

        // –∑–∞–∫–∞–∑–∞–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è = –≤—Å–µ —Ç–æ —á—Ç–æ —Å —Å—Ç–∞—Ç—É—Å–æ–º = –æ–ø–ª–∞—á–µ–Ω+ —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è data buy
        $value = '';
        $sql = "
            SELECT COUNT(*) FROM client cl
            WHERE cl.task1 = ?
            AND (
            cl.date_buy LIKE ?
            OR cl.date_buy LIKE ?
            )
            AND cl.`status` = '–¢–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω'
        ";
        $stmt = $dbh->prepare( $sql );
        if ( $stmt->execute( [ $client_id, date('Y-m-d').'%', date('d.m.Y').'%' ] ) ) {
            $value = $stmt->fetchColumn();
            
        }
        if ( !$value ) $value = 0;
        // $_value = 'üõí 19 —à—Ç. / 6422 ‚ÇΩ';
        $value = 'üõí '.$value.' —à—Ç.';

        $items[] = [
            'value' => $value,
            'label' => '–ó–∞–∫–∞–∑–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è',
            'link' => '',
            'help' => '',
        ];


        // –∑–∞–±—Ä–∞–ª–∏ –∑–∞ –≤—á–µ—Ä–∞= –≤—Å–µ —Ç–æ —á—Ç–æ —Å —Å—Ç–∞—Ç—É—Å–æ–º= –ø–æ–ª—É—á–µ–Ω, —Å–æ–≥–∞–ª—Å–æ–≤–∞—Ç—å, –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω,–º–æ–¥–µ—Ä–∞—Ü–∏—è+ –≤—á–µ—Ä–∞—à–Ω–µ–µ —á–∏—Å–ª–æ date get
        $value = '';
        $sql = "
            SELECT COUNT(*) FROM client cl
            WHERE cl.task1 = ?
            AND (
            cl.date_get LIKE ?
            OR cl.date_get LIKE ?
            )
            AND cl.`status` IN ('–ü–æ–ª—É—á–µ–Ω', 'C–æ–≥–∞–ª—Å–æ–≤–∞—Ç—å','–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω', '–ú–æ–¥–µ—Ä–∞—Ü–∏—è')
        ";
        $stmt = $dbh->prepare( $sql );
        if ( $stmt->execute( [ $client_id, date('Y-m-d', strtotime("-1 days")).'%', date('d.m.Y', strtotime("-1 days")).'%' ] ) ) {
            $value = $stmt->fetchColumn();
            
        }
        if ( !$value ) $value = 0;
        // $_value = 'üöö 49 —à—Ç.';
        $value = 'üöö '.$value.' —à—Ç.';

        $items[] = [
            'value' => $value,
            'label' => '–ó–∞–±—Ä–∞–ª–∏ –≤—á–µ—Ä–∞',
            'link' => '',
            'help' => '',
        ];

        // –Ω–∞–ø–∏—Å–∞–ª–∏ –æ—Ç–∑—ã–≤–æ–≤=–í—Å–µ —Ç–æ —á—Ç–æ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –º–æ–¥–µ—Ä–∞—Ü–∏ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
        $value = '';
        $sql = "
            SELECT COUNT(*) FROM client cl
            WHERE cl.task1 = ?
            AND cl.`status` IN ('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω', '–ú–æ–¥–µ—Ä–∞—Ü–∏—è')
        ";
        $stmt = $dbh->prepare( $sql );
        if ( $stmt->execute( [ $client_id ] ) ) {
            $value = $stmt->fetchColumn();
            
        }
        if ( !$value ) $value = 0;
        // $value = '‚úçÔ∏è 29 —à—Ç.';
        $value = '‚úçÔ∏è '.$value.' —à—Ç.';

        $items[] = [
            'value' => $value,
            'label' => '–ù–∞–ø–∏—Å–∞–ª–∏ –æ—Ç–∑—ã–≤–æ–≤',
            'link' => '',
            'help' => '',
        ];
        $items[] = [
            'value' => 'üí≥ 0 ‚ÇΩ',
            'label' => '–ë–∞–ª–∞–Ω—Å –Ω–∞ –≤—ã–∫—É–ø—ã',
            'link' => '#',
            'link_name' => '–ü–æ–ø–æ–ª–Ω–∏—Ç—å',
            'help' => '#',
        ];
        $items[] = [
            'value' => 'üõí 0 —à—Ç.',
            'label' => '–î–æ—Å—Ç—É–ø–Ω–æ –≤—ã–∫—É–ø–æ–≤',
            'link' => '#',
            'link_name' => '–ó–∞–∫–∞–∑–∞—Ç—å',
            'help' => '#',
        ];
        $items[] = [
            'value' => '‚≠êÔ∏è 0 —à—Ç.',
            'label' => '–î–æ—Å—Ç—É–ø–Ω–æ –æ—Ç–∑—ã–≤–æ–≤',
            'link' => '#',
            'link_name' => '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å',
            'help' => '#',
        ];
        $items[] = [
            'value' => 'üë§ 0 ‚ÇΩ',
            'label' => '–ë–∞–ª–∞–Ω—Å –õ–ö',
            'link' => '#',
            'link_name' => '–ü–æ–ø–æ–ª–Ω–∏—Ç—å',
            'help' => '#',
        ];

        return [
            'items' => $items
        ];
    }


    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
     * @param array $params –º–∞—Å—Å–∏–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
     * @param int $params[type] —Ç–∏–ø. 1: –ó–∞–∫–∞–∑–∞–ª–∏ 2: –ó–∞–±—Ä–∞–ª–∏
     */
    
    public function getStaInfo(array $params = []): array
    {

        $dbh = $this->rateDB->connection;

        $type = @$params['type'];
        if ( !$type ) $type = 1;
        if ( !in_array($type, array(1,2)) ) $type = 1;
        

        $client_id = @Auth::user()['task1'];
        if ( @$client_id ) $client_id = str_replace('#', '', $client_id);

        $last = $current = [];


        $items = [];

        $point_1 = date("Y-m-d 00:00:00", strtotime('saturday - 2 week'));
        $point_2 = date("Y-m-d 00:00:00", strtotime('saturday - 1 week'));
        $point_3 = date("Y-m-d 00:00:00", strtotime('+1 day'));

        $period_1 = new DatePeriod(
             new DateTime($point_1),
             new DateInterval('P1D'),
             new DateTime($point_2)
        );
         
        $dates_1 = array();
        foreach ($period_1 as $key => $value) {
            $dates_1[] = $value->format('Y-m-d');     
        }

        $period_2 = new DatePeriod(
             new DateTime($point_2),
             new DateInterval('P1D'),
             new DateTime($point_3)
        );
         
        $dates_2 = array();
        foreach ($period_2 as $key => $value) {
            $dates_2[] = $value->format('Y-m-d');     
        }

        if ( $type == 1 ) {
            // –ó–∞–∫–∞–∑–∞–ª–∏
            // —Å—Ç–∞—Å—Ç–∏–∫–∞= —ç—Ç–æ –≤—Å–µ —Ç–æ —á—Ç–æ —Å —Å—Ç–∞—Ç—É—Å–æ–º
            // –û–ø–ª–∞—á–µ–Ω, –ü–æ–ª—É—á–∏—Ç—å, –ü–æ–ª—É—á–µ–Ω, –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å, –ú–æ–¥–µ—Ä–∞—Ü–∏—è, –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω, –£–¥–∞–ª—ë–Ω, –∑–∞ –Ω–µ–¥–µ–ª—é
            // –ø–æ –¥–∞—Ç–∞–º –ø–æ–∫—É–ø–∫–∏, –≤ –Ω–µ–¥–µ–ª—å–Ω–æ–º—É —Ä–∞–∑—Ä–µ–∑–µ (date buy)
            $sql = "
                SELECT DATE(cl.date_buy) `date`, COUNT(*) cnt FROM client cl
                WHERE cl.task1 = ?
                AND cl.date_buy IS NOT NULL
                AND cl.`status` IN ('–¢–æ–≤–∞—Ä –æ–ø–ª–∞—á–µ–Ω', '–ü–æ–ª—É—á–∏—Ç—å', '–ü–æ–ª—É—á–µ–Ω','–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω', '–ú–æ–¥–µ—Ä–∞—Ü–∏—è', '–£–¥–∞–ª—ë–Ω')
                GROUP BY date          
                HAVING `date` >= ? AND `date` < ?
            ";
        } else if ( $type == 2 ) {
            // –ó–∞–±—Ä–∞–ª–∏
            // —ç—Ç–æ –≤—Å–µ —Ç–æ —á—Ç–æ —Å —Å—Ç–∞—Ç—É—Å–æ–º –ü–æ–ª—É—á–µ–Ω, –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å, –ú–æ–¥–µ—Ä–∞—Ü–∏—è, –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω, –£–¥–∞–ª—ë–Ω, –∑–∞ –Ω–µ–¥–µ–ª—é
            // –≤ –Ω–µ–¥–µ–ª—å–Ω–æ–º —Ä–∞–∑—Ä–µ–∑–µ –ø–æ date get   
            $sql = "
                SELECT DATE(cl.date_get) `date`, COUNT(*) cnt FROM client cl
                WHERE 1cl.task1 = ?
                AND cl.date_get IS NOT NULL
                AND cl.`status` IN ('–ü–æ–ª—É—á–∏—Ç—å', '–ü–æ–ª—É—á–µ–Ω','–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω', '–ú–æ–¥–µ—Ä–∞—Ü–∏—è', '–£–¥–∞–ª—ë–Ω')
                GROUP BY date          
                HAVING `date` >= ? AND `date` < ?
            ";
        }
        $stmt = $dbh->prepare( $sql );
        $_rows = [];
        if ( $stmt->execute( [ $client_id, $point_1, $point_2 ] ) ) {
            $rows = $stmt->fetchAll(\PDO::FETCH_ASSOC);
            foreach ($rows as $row) {
                $_rows[ $row['date'] ] = $row['cnt'];
            }
        }

        foreach ($dates_1 as $d) {
            if ( !@$_rows[ $d ] ) $last[] = 0;
            else $last[] = $_rows[ $d ];
        }

        $_rows = [];
        if ( $stmt->execute( [ $client_id, $point_2, $point_3 ] ) ) {
            $rows = $stmt->fetchAll(\PDO::FETCH_ASSOC);
            foreach ($rows as $row) {
                $_rows[ $row['date'] ] = $row['cnt'];
            }
        }
        foreach ($dates_2 as $d) {
            if ( !@$_rows[ $d ] ) $current[] = 0;
            else $current[] = $_rows[ $d ];
        }

        // –∑–∞—Ç—ã—á–∞–∫ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ 
        // $_last = $_current = [];
        // for($i=0;$i<count($last);$i++){$_last[]=rand(5,20);}
        // for($i=0;$i<count($current);$i++){$_current[]=rand(5,20);}
        // $last = $_last;
        // $current = $_current;
        // 

        return [
            'last' => $last,
            'current' => $current,
            'count' => array_sum($last) + array_sum($current),
            'sum' => 0,
            'update_date' => date('d.m.Y'),
            'update_time' => date('H:i'),
        ];
    }
}
